error_log /dev/stderr;
error_log error.log info;
worker_processes auto;
# worker_rlimit_nofile 100000;

events {
  worker_connections 32000;
}

http {
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 5;

  #lua_package_path "./lua/?.luac;../../lua/?.lua;../lua/?.lua;;";
  lua_package_path "../lua/?.lua;../../lua/*.lua;;";

  init_worker_by_lua_file "../../lua/init.lua";

  upstream target {
    keepalive 10000;
    server localhost:9010;
  }

  server {
    server_name localhost;
    listen 9002;

    location / {
      # "handler" must be set on every request.
      # We can set it to different values to tell the gateway to run
      # different sets of proxy logic.
      set_by_lua_block $unused { ngx.ctx.handler = 'default' }
      access_by_lua_file "../../lua/request.lua";
      header_filter_by_lua_file "../../lua/header-filter.lua";
      body_filter_by_lua_file "../../lua/body-filter.lua";

      proxy_pass http://target;
      proxy_http_version 1.1;
    }

    location /badHandler {
      set_by_lua_block $unused { ngx.ctx.handler = 'NOTFOUND' }
      access_by_lua_file "../../lua/request.lua";
      header_filter_by_lua_file "../../lua/header-filter.lua";
      body_filter_by_lua_file "../../lua/body-filter.lua";
    }
  }

  server {
    server_name localhost;
    listen 9010;

    location / {
      content_by_lua_block {
        local verb = ngx.req.get_method()
        if verb == "POST" or verb == "PUT" then
          ngx.req.read_body()
          ngx.print(ngx.req.get_body_data())
        else
          ngx.say("Hello!")
        end
      }
    }
  }
}
