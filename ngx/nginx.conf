error_log /dev/stderr;
error_log error.log info;
worker_processes auto;

events {
  worker_connections 10240;
}

http {
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 5;

  lua_package_path "./lua/lib/resty/gozerian/?.lua;;;";
  lua_package_cpath "./?.so;;;";

  init_worker_by_lua_block {
    libgozerian = require('lua-gozerian')
    -- register handlers - each handler can run different sets of proxy logic
    local handlers = {
      default = 'file:///Users/sganyo/dev/zuul/pipes/test.yaml'
    }
    libgozerian.init(handlers)
  }

  upstream target {
    keepalive 10000;
    server localhost:9010;
  }

  server {
    server_name localhost;
    listen 9002;

    location / {
      # a "handler" must be set on every request
      set_by_lua_block $unused { ngx.ctx.handler = 'default' }
      access_by_lua_file '../lua/lib/resty/gozerian/gozerian-request.lua';
      header_filter_by_lua_file '../lua/lib/resty/gozerian/gozerian-header-filter.lua';
      body_filter_by_lua_file '../lua/lib/resty/gozerian/gozerian-body-filter.lua';

      proxy_pass http://target;
      proxy_http_version 1.1;
    }

    location /badHandler {
      set_by_lua_block $unused { ngx.ctx.handler = 'NOTFOUND' }
      access_by_lua_file '../lua/lib/resty/gozerian/gozerian-request.lua';
      header_filter_by_lua_file '../lua/lib/resty/gozerian/gozerian-header-filter.lua';
      body_filter_by_lua_file '../lua/lib/resty/gozerian/gozerian-body-filter.lua';
    }
  }

  # test target server
  server {
    server_name localhost;
    listen 9010;

    location / {
      content_by_lua_block {
        local verb = ngx.req.get_method()
        if verb == "POST" or verb == "PUT" then
          ngx.req.read_body()
          ngx.print(ngx.req.get_body_data())
        else
          ngx.say("Hello!")
        end
      }
    }
  }
}
