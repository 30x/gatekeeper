error_log /dev/stderr;
error_log error.log info;
worker_processes auto;

events {
  worker_connections 7168;
}

http {
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 5;

  lua_package_path "./lua/?.lua;;;";

  init_worker_by_lua_block {
    libgozerian = require('lua-gozerian')
    -- register handlers
    -- each handler can run different sets of proxy logic
    -- define handlers as a yaml file in pipes dir
    local handlers = {
      dump = 'file:///Users/sganyo/dev/gatekeeper/pipes/dump.yaml',
      apikey = 'file:///Users/sganyo/dev/gatekeeper/pipes/apikey.yaml'
    }
    libgozerian.init(handlers)
  }

  upstream target {
    keepalive 10000;
    server mocktarget.apigee.net;
  }

  server {
    server_name localhost;
    listen 9000;

    location / {
      # a "handler" must be set on every request
      set_by_lua_block $unused { ngx.ctx.handler = 'dump' }
      access_by_lua_file '../lua/gozerian-request.lua';
      header_filter_by_lua_file '../lua/gozerian-header-filter.lua';
      body_filter_by_lua_file '../lua/gozerian-body-filter.lua';

      proxy_pass http://target;
      proxy_http_version 1.1;
    }

    location /iloveapis {
      # a "handler" must be set on every request
      set_by_lua_block $unused { ngx.ctx.handler = 'apikey' }
      access_by_lua_file '../lua/gozerian-request.lua';
      header_filter_by_lua_file '../lua/gozerian-header-filter.lua';
      body_filter_by_lua_file '../lua/gozerian-body-filter.lua';

      proxy_pass http://target;
      proxy_http_version 1.1;
    }

  }
}
